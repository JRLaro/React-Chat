{"version":3,"sources":["App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","ChatRoom","ex","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","currentUser","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","type","props","messageClass","className","src","App","useAuthState","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAYAA,IAASC,cAAc,CACrBC,OAAQ,0CACNC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGnB,IAAMC,EAAOT,IAASS,OAChBC,EAAYV,IAASU,YAkB3B,SAASC,IAKP,OACE,wBAAQC,QALe,WACvB,IAAMC,EAAW,IAAIb,IAASS,KAAKK,mBACnCL,EAAKM,gBAAgBF,IAGrB,mCAWJ,SAASG,IAEP,IAAMC,EAAKC,mBAGLC,EAAcT,EAAUU,WAAW,YAGnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IARnC,EAWCC,YAAkBH,EAAO,CAAEI,QAAS,OAAhDC,EAXW,sBAcgBC,mBAAS,IAdzB,mBAcXC,EAdW,KAcAC,EAdA,KAgBZC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DAClBD,EAAEE,iBADgB,EAGQxB,EAAKyB,YAAvBC,EAHU,EAGVA,IAAKC,EAHK,EAGLA,SAHK,SAMZjB,EAAYkB,IAAI,CACpBC,KAAMV,EACNW,UAAWvC,IAASU,UAAU8B,WAAWC,kBACzCN,MACAC,aAVgB,OAYlBP,EAAa,IAEbZ,EAAGyB,QAAQC,eAAe,CAACC,SAAS,WAdlB,2CAAH,sDAiBjB,OACE,qCACE,iCAEGlB,GAAYA,EAASmB,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OAEvD,qBAAKC,IAAKjC,OAGZ,uBAAMkC,SAAUrB,EAAhB,UACE,uBAAOsB,MAAOxB,EAAWyB,SAAU,SAACtB,GAAD,OAAOF,EAAaE,EAAEuB,OAAOF,UAEhE,wBAAQG,KAAK,SAAb,+BAIF,2BAMN,SAASR,EAAYS,GAAQ,IAAD,EACMA,EAAMR,QAA9BV,EADkB,EAClBA,KAAMH,EADY,EACZA,IAAKC,EADO,EACPA,SACbqB,EAAetB,IAAQ1B,EAAKyB,YAAYC,IAAM,OAAS,WAE7D,OACE,sBAAKuB,UAAS,kBAAaD,GAA3B,UACE,qBAAKE,IAAKvB,IACZ,4BAAIE,OAKOsB,MAnGf,WAAgB,IAAD,EACEC,YAAapD,GAArBqD,EADM,oBAEb,OACE,sBAAKJ,UAAU,MAAf,UACE,2BAGA,kCAEGI,EAAO,cAAC9C,EAAD,IAAe,cAACL,EAAD,UC7B/BoD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.396ee8df.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react';\nimport './App.css';\n\n// user authentication - firebase sdk\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// hooks\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyDENdlwyW1NSKYLtjIuKEbdw42w7K1l8bw\",\n    authDomain: \"superchat-c5489.firebaseapp.com\",\n    projectId: \"superchat-c5489\",\n    storageBucket: \"superchat-c5489.appspot.com\",\n    messagingSenderId: \"349703311020\",\n    appId: \"1:349703311020:web:ef7a6e904892130df21909\",\n    measurementId: \"G-7L2ZSDDWHY\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\n\nfunction App() {\n  const [user] = useAuthState(auth); //(signed in) -> user is an object (signed out) -> user is null\n  return (\n    <div className=\"App\">\n      <header>\n        \n      </header>\n      <section>\n        {/* if user: showChatroom else: show SignIn */}\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n  return (\n    <button onClick={signInWithGoogle}> Sign in with Google </button>\n  )\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button onClick={()=> auth.signOut()}> Sign Out </button>\n  )\n}\n\n\nfunction ChatRoom() {\n\n  const ex = useRef()\n  \n  // references a firestore collection\n  const messagesRef = firestore.collection('messages');\n\n  //query docs. in a collection\n  const query = messagesRef.orderBy('createdAt').limit(25);\n\n  //listen to data w/ hook\n  const [messages] = useCollectionData(query, { idField: 'id' });\n  //reacts to changes in rta\n\n  const [formValue, setFormValue] = useState('');\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    // create new doc in firestore\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    });\n    setFormValue('');\n\n    ex.current.scrollIntoView({behavior:\"smooth\"});\n  }\n\n  return (\n    <>\n      <main>\n        {/* loops over each doc */}\n        {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n        <div ref={ex}></div>\n      </main>\n      {/* write value to firestore */}\n      <form onSubmit={sendMessage}>\n        <input value={formValue} onChange={(e) => setFormValue(e.target.value)} />\n\n        <button type=\"submit\"> ðŸ•Š </button>\n</form>\n\n\n      <div>\n      </div>\n    </>\n  )\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'recieved';\n\n  return (\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL}/>\n    <p>{text}</p>\n</div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}